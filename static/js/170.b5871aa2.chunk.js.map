{"version":3,"file":"static/js/170.b5871aa2.chunk.js","mappings":"iOACaA,EAAaC,EAAAA,GAAAA,GAAH,6DCDVC,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACnBC,EAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAV,E,oBCCjBC,EAAeP,EAAAA,GAAAA,GAAH,mEAIZQ,EAAcR,EAAAA,GAAAA,IAAH,0CAGXS,EAAeT,EAAAA,GAAAA,IAAH,gDAGZU,EAAeV,EAAAA,GAAAA,KAAH,sBACZW,EAAcX,EAAAA,GAAAA,OAAH,iK,SCevB,EAlBmB,SAACY,EAAMC,EAAOC,GACjC,IAAMC,GAAWC,EAAAA,EAAAA,MACd,OAAW,SAACT,EAAD,WACP,UAACC,EAAD,YACE,UAACC,EAAD,YACE,UAACC,EAAD,eAAgBE,MAChB,SAACF,EAAD,UAAeG,QAEjB,SAACF,EAAD,CACEM,KAAK,SACLC,QAAS,kBAAMH,GAASI,EAAAA,EAAAA,IAAcL,GAA7B,EAFX,wBAST,ECMD,EAvBqB,WACnB,IAAMX,GAAWiB,EAAAA,EAAAA,IAAYnB,GACvBK,GAASc,EAAAA,EAAAA,IAAYf,GACrBU,GAAWC,EAAAA,EAAAA,MAMjB,OAJAK,EAAAA,EAAAA,YAAU,WACRN,GAASO,EAAAA,EAAAA,MACV,GAAE,CAACP,KAGF,SAAChB,EAAD,UACGI,EACEG,QAAO,qBAAGM,KAAgBW,cAAcC,SAASlB,EAAOiB,cAAjD,IACPE,KAAI,YAA0B,IAAvBX,EAAsB,EAAtBA,GAAIF,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAChB,OACE,+BACE,SAAC,EAAD,CAAsBC,GAAIA,EAAIF,KAAMA,EAAMC,MAAOA,GAA/BC,IAGvB,KAGR,EC1BD,EAJqB,WACrB,OAAO,SAAC,EAAD,GAEN,C","sources":["components/ContactsList/ContactsList.styled.js","redux/selectors.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","page/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nexport const ContactsUl = styled.ul`\n  margin-left: 40px;\n  padding: 0;\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;","import styled from \"styled-components\";\n\nexport const ContactsItem = styled.li`\n  list-style: disc;\n  padding: 10px 0px;\n`;\nexport const ContactsDiv = styled.div`\n  display: flex;\n`;\nexport const ContactsText = styled.div`\n  padding-right: 10px;\n`;\nexport const ContactsSpan = styled.span``;\nexport const ContactsBtn = styled.button`\n cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 4px 1px 4px -1px rgb(0 0 0 / 40%);\n  border-width: 0;\n  background-color: #fff;`\n","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contactsOperation\";\nimport{\n    ContactsItem,\n    ContactsText,\n    ContactsSpan,\n    ContactsBtn,\n    ContactsDiv,\n} from './ContactItem.styled';\n\nconst ContactItem = (name, phone, id) => {\n const dispatch = useDispatch();\n    return (   <ContactsItem>\n        <ContactsDiv>\n          <ContactsText>\n            <ContactsSpan> {name}</ContactsSpan>\n            <ContactsSpan>{phone}</ContactsSpan>\n          </ContactsText>\n          <ContactsBtn\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            delete\n          </ContactsBtn>\n        </ContactsDiv>\n      </ContactsItem>)\n  \n};\n export default ContactItem;","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport {\n  ContactsUl,\n} from './ContactsList.styled';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport {  fetchContacts } from 'redux/contactsOperation';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nconst ContactsList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsUl>\n      {contacts\n        .filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()))\n        .map(({ id, name, phone }) => {\n          return (\n            <>\n              <ContactItem key={id} id={id} name={name} phone={phone} />\n            </>\n          );\n        })}\n    </ContactsUl>\n  );\n};\nexport default ContactsList;\n","import ContactsList from 'components/ContactsList/ContactsList';\n\nconst ContactsPage = () => {\nreturn <ContactsList/>\n\n}\nexport default ContactsPage;\n\n// import { createAsyncThunk } from '@reduxjs/toolkit';\n// import axios from 'axios';\n\n// export const fetchContacts = createAsyncThunk(\n//   'contacts/fatchAll',\n//   async (_, thunkAPI) => {\n//     try {\n//       const response = await axios.get('/contacts');\n//       return response.data;\n//     } catch (error) {\n//       return thunkAPI.rejectWithValue(error.message);\n//     }\n//   }\n// );\n\n\n// export const addContact = createAsyncThunk(\n//     'contacts/addContacts',\n//     async (text, thunkAPI) => {\n//       try {\n//         const response = await axios.post('/contacts', {text});\n//         return response.data;\n//       } catch (error) {\n//         return thunkAPI.rejectWithValue(error.message);\n//       }\n//     }\n//   );\n"],"names":["ContactsUl","styled","getContacts","state","contacts","items","getFilter","filter","ContactsItem","ContactsDiv","ContactsText","ContactsSpan","ContactsBtn","name","phone","id","dispatch","useDispatch","type","onClick","deleteContact","useSelector","useEffect","fetchContacts","toLowerCase","includes","map"],"sourceRoot":""}
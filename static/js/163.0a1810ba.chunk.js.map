{"version":3,"file":"static/js/163.0a1810ba.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.styled.js","redux/selectors.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","page/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nexport const FormWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 400px;\n  gap: 8px;\n  margin-bottom: 20px;\n  padding: 8px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n`;\nexport const FormDiv = styled.div``;\nexport const FormLabel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\nexport const FormText = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  padding: 5px;\n  margin: 0;\n`;\nexport const FormInput = styled.input`\nborder-radius: 4px;\n\n  :focus {\n    box-shadow: 2px -2px 5px 2px #2196f3;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  margin-top: 20px;\n  padding: 4px 8px;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 4px 1px 4px -1px rgb(0 0 0 / 40%);\n  border-width: 0;\n  background-color: #fff;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  FormWrapper,\n  FormDiv,\n  FormLabel,\n  FormText,\n  FormBtn,\n  FormInput,\n} from './ContactForm.styled';\nimport { addContact } from 'redux/contactsOperation';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    console.log(event.target);\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n \n  const handleSubmit = e => {\n    e.preventDefault();\n    \n    dispatch(addContact({name, number}));\n    setName('');\n    setNumber('');\n  };\n  return (\n    <FormWrapper>\n      <form onSubmit={handleSubmit}>\n        <FormDiv>\n          <FormLabel htmlFor=\"name\">\n            <FormText>Name</FormText>\n            <FormInput\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={handleChange}\n            />\n          </FormLabel>\n        </FormDiv>\n        <FormDiv>\n          <FormLabel htmlFor=\"phone\">\n            <FormText> Number</FormText>\n            <FormInput\n              id=\"phone\"\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={handleChange}\n            />\n          </FormLabel>\n        </FormDiv>\n        <FormBtn type=\"submit\">Add contact</FormBtn>\n      </form>\n    </FormWrapper>\n  );\n};\n\nexport default ContactForm;\n\n","import styled from 'styled-components';\nexport const ContactsUl = styled.ul`\n  margin-left: 40px;\n  padding: 0;\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;","import styled from \"styled-components\";\n\nexport const ContactsItem = styled.li`\n  list-style: disc;\n  padding: 10px 0px;\n`;\nexport const ContactsDiv = styled.div`\n  display: flex;\n`;\nexport const ContactsText = styled.div`\n  padding-right: 10px;\n`;\nexport const ContactsSpan = styled.span``;\nexport const ContactsBtn = styled.button`\n cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 4px 1px 4px -1px rgb(0 0 0 / 40%);\n  border-width: 0;\n  background-color: #fff;`\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactsOperation';\nimport {\n  ContactsItem,\n  ContactsText,\n  ContactsSpan,\n  ContactsBtn,\n  ContactsDiv,\n} from './ContactItem.styled';\n\nconst ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  return (\n    <ContactsItem>\n      <ContactsDiv>\n        <ContactsText>\n          <ContactsSpan> {name}</ContactsSpan>\n          <ContactsSpan>{number}</ContactsSpan>\n        </ContactsText>\n        <ContactsBtn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n          delete\n        </ContactsBtn>\n      </ContactsDiv>\n    </ContactsItem>\n  );\n};\nexport default ContactItem;\n","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport {\n  ContactsUl,\n} from './ContactsList.styled';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport {  fetchContacts } from 'redux/contactsOperation';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nconst ContactsList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsUl>\n      {contacts\n        .filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()))\n        .map(({ id, name, number }) => {\n          return (\n            <div key={id}>\n              <ContactItem  id={id} name={name} number={number} />\n            </div>\n          );\n        })}\n    </ContactsUl>\n  );\n};\nexport default ContactsList;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\n\nconst ContactsPage = () => {\nreturn <> \n<ContactForm/>\n<ContactsList/>\n</> \n}\nexport default ContactsPage;"],"names":["FormWrapper","styled","FormDiv","FormLabel","FormText","FormInput","FormBtn","onSubmit","useState","name","setName","number","setNumber","dispatch","useDispatch","handleChange","event","console","log","target","value","e","preventDefault","addContact","htmlFor","id","type","pattern","title","required","onChange","ContactsUl","getContacts","state","contacts","items","getFilter","filter","ContactsItem","ContactsDiv","ContactsText","ContactsSpan","ContactsBtn","onClick","deleteContact","useSelector","useEffect","fetchContacts","toLowerCase","includes","map"],"sourceRoot":""}